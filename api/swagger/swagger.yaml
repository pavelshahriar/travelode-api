swagger: "2.0"
info:
  version: "0.0.1"
  title: Travelode API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
#
tags:
  - name: User
    description: User APIs. Find and create user. Get, update, delete user by id. Get user by credentials.
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /user:
    # binds a127 app logic to a route
    x-swagger-router-controller: user

    get:
      tags:
        - User
      description: Returns users list
      operationId: findUsers
      parameters:
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
        - name: email
          in: query
          description: Find by email id
          required: false
          type: string
        - name: fullname
          in: query
          description: Find by full name
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - User
      summary: Create new user
      operationId: createUser
      parameters:
        - in: body
          name: userData
          description: User data to create a new user
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /user/{id}:
    x-swagger-router-controller: user

    get:
      tags:
        - User
      description: Returns a single user
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: The User Id
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags:
        - User
      summary: Update a user
      operationId: updateUserById
      parameters:
        - name: id
          in: path
          description: The user id to update
          required: true
          type: integer
          minimum: 1
        - name: userData
          in: body
          description: The user data to update
          required: true
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
              fullname:
                type: string
              photo:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - User
      summary: Delete a user
      operationId: deleteUserById
      parameters:
        - name: id
          in: path
          description: The user id to update
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/login:
    # binds a127 app logic to a route
    x-swagger-router-controller: user

    post:
      tags:
        - User
      summary: Retrieve user by login credentials
      operationId: retrieveUserByLogin
      parameters:
        - in: body
          name: loginCredential
          description: Login credential to retrieve the user
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /swagger:
    x-swagger-pipe: swagger_raw

# complex objects have schema definitions
definitions:
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  User:
    type: object
    properties:
      id:
        type: number
        description: User Id
      email:
        type: string
        description: User Email
      fullname:
        type: string
        description: User Full Name
      photo:
        description: User Photo URL
        type: string

  UserListResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items:
          $ref: "#/definitions/User"