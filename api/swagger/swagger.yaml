swagger: "2.0"
info:
  version: "0.0.1"
  title: Travelode API

host: localhost:28252
basePath: /
schemes:
  - http
  - https

consumes:
  - application/json
produces:
  - application/json

tags:
  - name: User
    description: User APIs. Find and create user. Get, update, delete user by id. Get user by credentials.
  - name: Travelode
    description: Travelode APIs. Find and create travelode. Get, update, delete travelode by id.
  - name: Media
    description: Media APIs. Find and create media. Get, update, delete media by id.
  - name: Travelode Media
    description: Travelode-Media APIs. Find and assign media to travelodes. Get, update, delete travelode-media by id.
  - name: Travelode Media Category
    description: Travelode-Media Category APIs. Find and assign travelode-media-category to travelode-Medias. Get, update, delete travelode-media-category by id.

paths:
  /user:
    # binds a127 app logic to a route
    x-swagger-router-controller: user

    get:
      tags:
        - User
      summary: Returns users list
      operationId: findUsers
      parameters:
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
        - name: email
          in: query
          description: Find by email id
          required: false
          type: string
        - name: fullname
          in: query
          description: Find by full name
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - User
      summary: Create new user
      operationId: createUser
      consumes:
        - multipart/form-data
      produces:
          - application/json
      parameters:
        - in: formData
          name: email
          description: Email id of the user, has to be unique
          required: true
          type: string
          format: email
        - in: formData
          name: password
          description: Password of the user
          required: true
          type: string
          format: password
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreatedResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/{id}:
    x-swagger-router-controller: user

    get:
      tags:
        - User
      summary: Returns a single user
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: The User Id
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags:
        - User
      summary: Update a user
      operationId: updateUserById
      parameters:
        - name: id
          in: path
          description: The user id to update
          required: true
          type: integer
          minimum: 1
        - name: userData
          in: body
          description: The user data to update
          required: true
          schema:
            type: object
            properties:
              fullname:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - User
      summary: Delete a user
      operationId: deleteUserById
      parameters:
        - name: id
          in: path
          description: The user id to delete
          required: true
          type: integer
          minimum: 1
      responses:
        "204":
          description: User is removed
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/login:
    # binds a127 app logic to a route
    x-swagger-router-controller: user

    post:
      tags:
        - User
      summary: Retrieve user by login credentials
      operationId: retrieveUserByLogin
      consumes:
        - multipart/form-data
      produces:
          - application/json
      parameters:
        - in: formData
          name: email
          description: Email id of the user
          required: true
          type: string
          format: email
        - in: formData
          name: password
          description: Password of the user
          required: true
          type: string
          format: password
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        "401":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /travelode:
    # binds a127 app logic to a route
    x-swagger-router-controller: travelode

    get:
      tags:
        - Travelode
      summary: Returns travelode list
      operationId: findTravelodes
      parameters:
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
        - name: title
          in: query
          description: Find by travelode title
          required: false
          type: string
        - name: userId
          in: query
          description: Find by userId
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeListResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - Travelode
      summary: Create new travelode
      operationId: createTravelode
      consumes:
        - multipart/form-data
      produces:
          - application/json
      parameters:
        - in: formData
          name: title
          description: Title of the Travelode
          required: true
          type: string
        - in: formData
          name: description
          description: Description of the Travelode
          required: false
          type: string
        - in: formData
          name: userId
          description: Creator / owner of the Travelode
          required: true
          type: integer
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreatedResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /travelode/{id}:
    x-swagger-router-controller: travelode

    get:
      tags:
        - Travelode
      summary: Returns a single travelode details
      operationId: getTravelodeById
      parameters:
        - name: id
          in: path
          description: The Travelode Id
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeListResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags:
        - Travelode
      summary: Update a travelode
      operationId: updateTravelodeById
      parameters:
        - name: id
          in: path
          description: The travelode id to update
          required: true
          type: integer
          minimum: 1
        - name: travelodeData
          in: body
          description: The travelode data to update
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - Travelode
      summary: Delete a travelode
      operationId: deleteTravelodeById
      parameters:
        - name: id
          in: path
          description: The travelode id to delete
          required: true
          type: integer
          minimum: 1
      responses:
        "204":
          description: Travelode is removed
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /travelode/{id}/media:
    x-swagger-router-controller: travelode_media

    get:
      tags:
        - Travelode
      summary: Returns media list of a travelode
      operationId: findMediasByTravelode
      parameters:
        - name: id
          in: path
          description: The Travelode Id
          required: true
          type: integer
          minimum: 1
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MediaListResponse"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - Travelode
      summary: Add a media to a travelode
      operationId: addMediaToTravelode
      consumes:
        - multipart/form-data
      produces:
          - application/json
      parameters:
        - name: id
          in: path
          description: The Travelode Id
          required: true
          type: integer
          minimum: 1
        - name: mediaId
          in: formData
          description: The media id which will be added for the travelode
          required: true
          type: integer
          minimum: 1
        - in: formData
          name: title
          description: Title of the Travelode Media
          required: true
          type: string
        - in: formData
          name: caption
          description: Caption of the Travelode Media
          required: false
          type: string
        - in: formData
          name: displayDate
          description: Display date of the travelode media. Correct Format - `mm/dd/yyy`
          required: false
          type: string
          format: date-time
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreatedResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /media:
    x-swagger-router-controller: media

    get:
      tags:
        - Media
      summary: Returns media list
      operationId: findMedias
      parameters:
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
        - name: type
          in: query
          description: Find media by type (0=all, 1=photo, 2=video)
          required: true
          type: number
          enum:
            - 0
            - 1
            - 2
          default: 0
        - name: userId
          in: query
          description: Find by owner
          required: false
          type: number
        - name: locationId
          in: query
          description: Find by location
          required: false
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MediaListResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - Media
      summary: Uploads a media
      operationId: createMedia
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      produces:
          - text/plain
      parameters:
        - in: formData
          name: userId
          required: true
          type: number
          description: The media owner
        - in: formData
          name: tripMedia
          required: true
          type: file
          description: The media to upload
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreatedResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /media/{id}:
    x-swagger-router-controller: media

    get:
      tags:
        - Media
      summary: Returns a single media
      operationId: getMediaById
      parameters:
        - name: id
          in: path
          description: The Media Id
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MediaListResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags:
        - Media
      summary: Update a media
      operationId: updateMediaById
      parameters:
        - name: id
          in: path
          description: The media id to update
          required: true
          type: integer
          minimum: 1
        - name: mediaData
          in: body
          description: The media data to update
          required: true
          schema:
            type: object
            properties:
              userId:
                type: number
              locationId:
                type: number
              sizeX:
                type: number
              sizeY:
                type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - Media
      summary: Delete a media
      operationId: deleteMediaById
      parameters:
        - name: id
          in: path
          description: The media id to delete
          required: true
          type: integer
          minimum: 1
      responses:
        "204":
          description: Media is removed
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /media/{id}/travelode:
    x-swagger-router-controller: travelode_media

    get:
      tags:
        - Media
      summary: Returns list of travelodes which have this media
      operationId: findTravelodeByMedia
      parameters:
        - name: id
          in: path
          description: The Media Id
          required: true
          type: integer
          minimum: 1
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeListResponse"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - Media
      summary: Add this media to a travelode
      operationId: addTravelodeForMedia
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The Media Id
          required: true
          type: integer
          minimum: 1
        - name: travelodeId
          in: formData
          description: The travelode id which will have this media
          required: true
          type: integer
          minimum: 1
        - in: formData
          name: title
          description: Title of the Travelode Media
          required: true
          type: string
        - in: formData
          name: caption
          description: Caption of the Travelode Media
          required: false
          type: string
        - in: formData
          name: displayDate
          description: Display date of the travelode media. Correct format - `mm/dd/yyyy`
          required: false
          type: string
          format: date-time
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreatedResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /travelode/media:
    x-swagger-router-controller: travelode_media

    get:
      tags:
        - Travelode Media
      summary: Returns list of a travelode-media
      operationId: findTravelodeMedias
      parameters:
        - name: travelodeId
          in: query
          description: The Travelode Id
          required: false
          type: integer
          minimum: 1
        - name: mediaId
          in: query
          description: The Media Id
          required: false
          type: integer
          minimum: 1
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
        - name: title
          in: query
          description: Find by travelode media title
          required: false
          type: string
        - name: displayDate
          in: query
          description: Find by travelode media date. Correct format - `mm/dd/yyyy`
          required: false
          type: string
          format: date-time
        - name: location
          in: query
          description: Find by travelode media location
          required: false
          type: number
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeMediaListResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - Travelode Media
      summary: Add a travelode-media
      operationId: addTravelodeMedia
      consumes:
        - multipart/form-data
      produces:
          - application/json
      parameters:
        - name: travelodeId
          in: formData
          description: The travelode id for which the media will be added
          required: true
          type: integer
          minimum: 1
        - name: mediaId
          in: formData
          description: The media id which will be added for the travelode
          required: true
          type: integer
          minimum: 1
        - in: formData
          name: title
          description: Title of the Travelode Media
          required: true
          type: string
        - in: formData
          name: caption
          description: Caption of the Travelode Media
          required: false
          type: string
        - in: formData
          name: displayDate
          description: Display date of the travelode media
          required: false
          type: string
          format: date-time
        - in: query
          name: categories
          description: Tagged categories of this travelode media
          required: false
          type: array
          items:
            type: string
            enum:
              - do
              - eat
              - see
          collectionFormat: csv
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreatedResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /travelode/media/{id}:
    x-swagger-router-controller: travelode_media

    get:
      tags:
        - Travelode Media
      summary: Returns a single travelode-media details
      operationId: getTravelodeMediaById
      parameters:
        - name: id
          in: path
          description: The travelode-media Id
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeMediaListResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags:
        - Travelode Media
      summary: Updates a travelode-media details
      operationId: updateTravelodeMediaById
      parameters:
        - name: id
          in: path
          description: The travelode-media Id
          required: true
          type: integer
          minimum: 1
        - name: travelodeMediaData
          in: body
          description: The travelode media data to update
          required: true
          schema:
            type: object
            properties:
              rollNo:
                type: integer
              privacy:
                type: integer
              title:
                type: string
              caption:
                type: string
              displayDate:
                type: string
                format: date-time
              displayLocationId:
                type: integer
              isCover:
                type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - Travelode Media
      summary: Delete a travelode-media
      operationId: deleteTravelodeMediaById
      parameters:
        - name: id
          in: path
          description: The travelode-media Id
          required: true
          type: integer
          minimum: 1
      responses:
        "204":
          description: Travelode Media is removed
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# MEDIA CATEGORY STARTS 
  /travelode/media/category:
    x-swagger-router-controller: travelode_media_category

    get:
      tags:
        - Travelode Media Category
      summary: Returns list of a travelode-media-category
      operationId: findTravelodeMediaCategory
      parameters:
        - name: travelodeId
          in: query
          description: Find by the travelode Id
          required: false
          type: integer
          minimum: 1
        - name: mediaId
          in: query
          description: Find by the Media Id
          required: false
          type: integer
          minimum: 1
        - name: categoryId
          in: query
          description: Find by The Category Id
          required: false
          type: integer
          minimum: 1
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeMediaCategoryListResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - Travelode Media Category
      summary: Add a travelode-media-category
      operationId: addTravelodeMediaCategory
      consumes:
        - multipart/form-data
      produces:
          - application/json
      # FIXME No other POST method added TravelodeMediaCateogry type definition, need a decision
      parameters:
        - name: travelodeId
          in: formData
          description: The travelode id for which the category will be added
          required: true
          type: integer
          minimum: 1
        - name: mediaId
          in: formData
          description: The media id which will be added for the travelode category
          required: true
          type: integer
          minimum: 1
        # FIXME Accept categories as array not a singular input
        - name: categoryId
          in: formData
          description: The category id which will be add for the media
          required: true
          type: integer

      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CreatedResponse"
        # responses may fall through to errors
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /travelode/media/category/{id}:
    x-swagger-router-controller: travelode_media_category

    get:
      tags:
        - Travelode Media Category
      summary: Returns a single travelode-media category details
      operationId: getTravelodeMediaCategoryById
      parameters:
        - name: id
          in: path
          description: The category Id associated with travelode-media
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeMediaCategoryListResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    put:
      tags:
        - Travelode Media Category
      summary: Updates a travelode-media-category details
      operationId: updateTravelodeMediaCategoryById
      parameters:
        - name: id
          in: path
          description: The travelode-media-category Id
          required: true
          type: integer
          minimum: 1
        - name: travelodeMediaCategoryData
          in: body
          description: The travelode media category data to update
          required: false
          schema:
            type: object
            properties:
              travelodeId:
                type: integer
              mediaId:
                type: integer
              # FIXME Accept categories as array not a singular input
              categoryId:
                type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - Travelode Media Category
      summary: Delete a travelode-media-category
      operationId: deleteTravelodeMediaCategoryById
      parameters:
        - name: id
          in: path
          description: The travelode-media-category Id
          required: true
          type: integer
          minimum: 1
      responses:
        "204":
          description: Travelode Media Category is removed
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# MEDIA CATEGORY SCHEMA ENDS

  /swagger:
    x-swagger-pipe: swagger_raw

# complex objects have schema definitions
definitions:
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string

  CreatedResponse:
    required:
      - message
      - id
    properties:
      message:
        type: string
      id:
        type: number

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  User:
    type: object
    properties:
      id:
        type: number
        description: User Id
      email:
        type: string
        description: User Email
      fullname:
        type: string
        description: User Full Name
      photo:
        description: User Photo's Media Id
        type: number
      created:
        description: User Creation Date Time
        type: string
        format: date-time
      updated:
        description: User Update Date time
        type: string
        format: date-time

  UserListResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items:
          $ref: "#/definitions/User"

  Travelode:
    type: object
    properties:
      id:
        type: number
        description: Travelode Id
      title:
        type: string
        description: Travelode Title
      description:
        type: string
        description: Travelode Description
      userId:
        type: string
        description: Travelode Owner UserId
      created:
        description: Travelode Creation Date Time
        type: string
        format: date-time
      updated:
        description: Travelode Update Date time
        type: string
        format: date-time

  TravelodeListResponse:
    required:
      - travelodes
    properties:
      # The array of travelodes
      travelodes:
        type: array
        items:
          $ref: "#/definitions/Travelode"

  Media:
    type: object
    properties:
      id:
        type: number
        description: Media Id
      type:
        type: string
        description: Type of the media (photo or video)
      userId:
        type: number
        description: Media owner userId
      uploaded:
        description: Media uploading date time
        type: string
        format: date-time
      updated:
        description: Media update date time
        type: string
        format: date-time
      created:
        description: Media creation date time
        type: string
        format: date-time
      sizeX:
        type: number
        description: Media size width in px
      sizeY:
        type: number
        description: Media size height in px
      url:
        type: string
        description: Url for the media

  MediaListResponse:
    required:
      - medias
    properties:
      # The array of medias
      medias:
        type: array
        items:
          $ref: "#/definitions/Media"

  TravelodeMedia:
    type: object
    properties:
      id:
        type: number
        description: Travelode Media Id
      travelodeId:
        type: number
        description: Travelode Id
      mediaId:
        type: number
        description: Media Id
      rollNo:
        type: number
        description: Roll of this media in the travelode
      privacy:
        type: number
        description: Privacy of the media in the travelode
      title:
        type: string
        description: Title of the media in the travelode
      caption:
        type: string
        description: Caption of the media in the travelode
      displayDate:
        description: The date to be displayed in the travelode
        type: string
        format: date-time
      displayLocationId:
        description: Id of the location to be displayed in the travelode
        type: string
        format: date-time
      created:
        description: Date of creating the travelode-media
        type: string
        format: date-time
      isCover:
        type: boolean
        description: Is this the cover for the travelode or not
      categories:
        description: List of categories this media is tagged with
        type: array
        items:
          $ref: "#/definitions/Category"

  Category:
    type: object
    properties:
      id:
        description: Category id
        type: number
      name:
        description: Category name
        type: string

  TravelodeMediaListResponse:
    required:
      - travelodeMedias
    properties:
      # The array of medias
      travelodeMedias:
        type: array
        items:
          $ref: "#/definitions/TravelodeMedia"
  
  TravelodeMediaCategory:
    type: object
    properties:
      id:
        description: TravelodeMediaCategory Id
        type: number
      travelodeId:
        description: Travelode Id
        type: number
      mediaId:
        description: Media Id
        type: number
      categoryId:
        description: Category Id
        type: number
  
  TravelodeMediaCategoryListResponse:
    required:
      - travelodeMediaCategories
    properties:
      # Array of TravelodeMediaCategory
      travelodeMediaCategories:
        type: array
        items:
          $ref: "#/definitions/TravelodeMediaCategory"
