swagger: "2.0"
info:
  version: "0.0.1"
  title: Travelode API

host: 127.0.0.1:28825
basePath: /
schemes:
  - http
  - https

consumes:
  - application/json
produces:
  - application/json

tags:
  - name: User
    description: User APIs. Find and create user. Get, update, delete user by id. Get user by credentials.
  - name: Travelode
    description: Travelode APIs. Find and create travelode. Get, update, delete travelode by id.
  - name: Media
    description: Media APIs. Find and create media. Get, update, delete media by id.

paths:
  /user:
    # binds a127 app logic to a route
    x-swagger-router-controller: user

    get:
      tags:
        - User
      summary: Returns users list
      operationId: findUsers
      parameters:
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
        - name: email
          in: query
          description: Find by email id
          required: false
          type: string
        - name: fullname
          in: query
          description: Find by full name
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - User
      summary: Create new user
      operationId: createUser
      consumes:
        - multipart/form-data
      produces:
          - application/json
      parameters:
        - in: formData
          name: email
          description: Email id of the user, has to be unique
          required: true
          type: string
          format: email
        - in: formData
          name: password
          description: Password of the user
          required: true
          type: string
          format: password
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/{id}:
    x-swagger-router-controller: user

    get:
      tags:
        - User
      summary: Returns a single user
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: The User Id
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags:
        - User
      summary: Update a user
      operationId: updateUserById
      parameters:
        - name: id
          in: path
          description: The user id to update
          required: true
          type: integer
          minimum: 1
        - name: userData
          in: body
          description: The user data to update
          required: true
          schema:
            type: object
            properties:
              fullname:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - User
      summary: Delete a user
      operationId: deleteUserById
      parameters:
        - name: id
          in: path
          description: The user id to delete
          required: true
          type: integer
          minimum: 1
      responses:
        "204":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user/login:
    # binds a127 app logic to a route
    x-swagger-router-controller: user

    post:
      tags:
        - User
      summary: Retrieve user by login credentials
      operationId: retrieveUserByLogin
      consumes:
        - multipart/form-data
      produces:
          - application/json
      parameters:
        - in: formData
          name: email
          description: Email id of the user
          required: true
          type: string
          format: email
        - in: formData
          name: password
          description: Password of the user
          required: true
          type: string
          format: password
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserListResponse"
        "401":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /travelode:
    # binds a127 app logic to a route
    x-swagger-router-controller: travelode

    get:
      tags:
        - Travelode
      summary: Returns travelode list
      operationId: findTravelodes
      parameters:
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
        - name: title
          in: query
          description: Find by travelode title
          required: false
          type: string
        - name: userId
          in: query
          description: Find by userId
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeListResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - Travelode
      summary: Create new travelode
      operationId: createTravelode
      consumes:
        - multipart/form-data
      produces:
          - application/json
      parameters:
        - in: formData
          name: title
          description: Title of the Travelode
          required: true
          type: string
        - in: formData
          name: description
          description: Description of the Travelode
          required: false
          type: string
        - in: formData
          name: userId
          description: Creator / owner of the Travelode
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /travelode/{id}:
    x-swagger-router-controller: travelode

    get:
      tags:
        - Travelode
      summary: Returns a single travelode details
      operationId: getTravelodeById
      parameters:
        - name: id
          in: path
          description: The Travelode Id
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TravelodeListResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags:
        - Travelode
      summary: Update a travelode
      operationId: updateTravelodeById
      parameters:
        - name: id
          in: path
          description: The travelode id to update
          required: true
          type: integer
          minimum: 1
        - name: travelodeData
          in: body
          description: The travelode data to update
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - Travelode
      summary: Delete a travelode
      operationId: deleteTravelodeById
      parameters:
        - name: id
          in: path
          description: The travelode id to delete
          required: true
          type: integer
          minimum: 1
      responses:
        "204":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /media:
    x-swagger-router-controller: media

    get:
      tags:
        - Media
      summary: Returns media list
      operationId: findMedias
      parameters:
        - name: page
          in: query
          description: The page number to get. Default to 0.
          required: false
          type: string
        - name: size
          in: query
          description: The size of the page to get. Default to 50.
          required: false
          type: string
        - name: type
          in: query
          description: Find media by type (0=all, 1=photo, 2=video)
          required: true
          type: number
          enum:
            - 0
            - 1
            - 2
          default: 0
        - name: userId
          in: query
          description: Find by owner
          required: false
          type: number
        - name: locationId
          in: query
          description: Find by location
          required: false
          type: number
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MediaListResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      tags:
        - Media
      summary: Uploads a media
      operationId: createMedia
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      produces:
          - text/plain
      parameters:
        - in: formData
          name: userId
          required: true
          type: number
          description: The media owner
        - in: formData
          name: tripMedia
          required: true
          type: file
          description: The media to upload
        - in: formData
          name: clouded
          description: Parameter for media creation
          type: boolean
          enum:
            - true
          default: true
      responses:
        "200":
          description: Success
          schema:
            type: string
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /media/{id}:
    x-swagger-router-controller: media

    get:
      tags:
        - Media
      summary: Returns a single media
      operationId: getMediaById
      parameters:
        - name: id
          in: path
          description: The Media Id
          required: true
          type: integer
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MediaListResponse"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

# complex objects have schema definitions
definitions:
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  User:
    type: object
    properties:
      id:
        type: number
        description: User Id
      email:
        type: string
        description: User Email
      fullname:
        type: string
        description: User Full Name
      photo:
        description: User Photo URL
        type: string
      created:
        description: User Creation Date Time
        type: string
        format: date-time
      updated:
        description: User Update Date time
        type: string
        format: date-time

  UserListResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items:
          $ref: "#/definitions/User"

  Travelode:
    type: object
    properties:
      id:
        type: number
        description: Travelode Id
      title:
        type: string
        description: Travelode Title
      description:
        type: string
        description: Travelode Description
      userId:
        type: string
        description: Travelode Owner UserId
      created:
        description: Travelode Creation Date Time
        type: string
        format: date-time
      updated:
        description: Travelode Update Date time
        type: string
        format: date-time

  TravelodeListResponse:
    required:
      - travelodes
    properties:
      # The array of travelodes
      travelodes:
        type: array
        items:
          $ref: "#/definitions/Travelode"

  Media:
    type: object
    properties:
      id:
        type: number
        description: Media Id
      type:
        type: string
        description: Type of the media (photo or video)
      userId:
        type: number
        description: Media owner userId
      uploaded:
        description: Media uploading date time
        type: string
        format: date-time
      updated:
        description: Media update date time
        type: string
        format: date-time
      created:
        description: Media creation date time
        type: string
        format: date-time
      sizeX:
        type: number
        description: Media size width in px
      sizeY:
        type: number
        description: Media size height in px
      url:
        type: string
        description: Url for the media

  MediaListResponse:
    required:
      - medias
    properties:
      # The array of medias
      medias:
        type: array
        items:
          $ref: "#/definitions/Media"
